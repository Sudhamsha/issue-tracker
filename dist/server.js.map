{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","process","env","NODE_ENV","webpack","require","webpackDevMiddleware","webpackHotMiddleware","config","entry","push","plugins","HotModuleReplacementPlugin","bundler","noInfo","log","console","db","connect","then","connection","listen","catch","error","get","req","res","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","collection","find","toArray","issues","metadata","total_count","length","_metadata","records","message","issueId","ObjectId","ObjectID","params","id","_id","limit","next","issue","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","result","insertedId","put","update","convertIssue","savedIssue","delete","deleteOne","deleteRequest","n","sendFile","resolve"],"mappings":"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","file":"server.js","sourcesContent":["\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';\nimport Issue from './issue';\nimport path from 'path';\n\nSourceMapSupport.install();\n\nconst app = express();\napp.use(express.static('public'));\napp.use(bodyParser.json());\n\nif (process.env.NODE_ENV !== 'production') {\n  const webpack = require('webpack'); // eslint-disable-line\n  const webpackDevMiddleware = require('webpack-dev-middleware'); // eslint-disable-line\n  const webpackHotMiddleware = require('webpack-hot-middleware'); // eslint-disable-line\n\n  const config = require('../webpack.config'); // eslint-disable-line\n  config.entry.app.push('webpack-hot-middleware/client', 'webpack/hot/only-dev-server');\n  config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n  const bundler = webpack(config);\n  app.use(webpackDevMiddleware(bundler, { noInfo: true }));\n  app.use(webpackHotMiddleware(bundler, { log: console.log }));\n}\n\nlet db;\nMongoClient.connect('mongodb://localhost/issuetracker').then((connection) => {\n  db = connection;\n  app.listen(8000, () => {\n    console.log('App started on 8000');\n  });\n}).catch((error) => {\n  console.log('ERROR', error);\n});\n\n// Get Issues\napp.get('/api/issues', (req, res) => {\n  const filter = {};\n  if (req.query.status) {\n    filter.status = req.query.status;\n  }\n\n  if (req.query.effort_lte || req.query.effort_gte) {\n    filter.effort = {};\n  }\n\n  if (req.query.effort_lte) {\n    filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  }\n\n  if (req.query.effort_gte) {\n    filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n  }\n\n  db.collection('issues').find(filter).toArray().then((issues) => {\n    const metadata = { total_count: issues.length };\n    res.json({ _metadata: metadata, records: issues });\n  })\n    .catch((error) => {\n      console.log('ERROR', error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n// Get Single Issue\napp.get('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    const ObjectId = require('mongodb').ObjectID;\n    issueId = ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n  db.collection('issues').find({ _id: issueId }).limit(1)\n    .next()\n    .then(issue => {\n      if (!issue) res.status(404).json({ message: `No issue found with ID: ${issueId}` });\n      else res.json(issue);\n    })\n    .catch(error => {\n      res.status(500).json({ message: `Internal Server Error: ${error}`});\n    });\n  });\n\n// Post Issue\napp.post('/api/issues', (req, res) => {\n  const newIssue = req.body;\n  newIssue.created = new Date();\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result =>\n    db.collection('issues').find({ _id: result.insertedId }).limit(1).next(),\n  ).then((newIssue) => {\n    res.json(newIssue);\n  })\n    .catch((error) => {\n      console.log('ERROR', error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n// Update Issue\napp.put('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    const ObjectId = require('mongodb').ObjectID;\n    issueId = ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n\n  const issue = req.body;\n  delete issue._id;\n\n  const err = Issue.validateIssue(issue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n  }\n  db.collection('issues').update({ _id: issueId },\n    Issue.convertIssue(issue)).then(() =>\n    db.collection('issues').find({ _id: issueId }).limit(1)\n      .next()\n  )\n    .then(savedIssue => {\n      res.json(savedIssue);\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\napp.delete('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    const ObjectId = require('mongodb').ObjectID;\n    issueId = ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n\n  db.collection('issues').deleteOne({ _id: issueId }).then((deleteRequest) => {\n    if (deleteRequest.result.n === 1) res.json({ status: 'OK' });\n    else res.json({ status: 'Warning: object not found' });\n  })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('public/index.html'));\n});\n"]}