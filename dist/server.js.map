{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","process","env","NODE_ENV","webpack","require","webpackDevMiddleware","webpackHotMiddleware","config","entry","push","plugins","HotModuleReplacementPlugin","bundler","noInfo","log","console","db","connect","then","connection","listen","catch","error","get","req","res","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","search","$text","$search","_summary","undefined","limit","_limit","offset","_offset","cursor","collection","find","sort","_id","skip","totalCount","count","result","toArray","issues","metadata","records","message","aggregate","$match","$group","owner","$sum","results","stats","forEach","issueId","ObjectId","ObjectID","params","id","next","issue","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","insertedId","put","update","convertIssue","savedIssue","delete","deleteOne","deleteRequest","n","sendFile","resolve"],"mappings":"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","file":"server.js","sourcesContent":["\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';\nimport Issue from './issue';\nimport path from 'path';\n\nSourceMapSupport.install();\n\nconst app = express();\napp.use(express.static('public'));\napp.use(bodyParser.json());\n\nif (process.env.NODE_ENV !== 'production') {\n  const webpack = require('webpack'); // eslint-disable-line\n  const webpackDevMiddleware = require('webpack-dev-middleware'); // eslint-disable-line\n  const webpackHotMiddleware = require('webpack-hot-middleware'); // eslint-disable-line\n\n  const config = require('../webpack.config'); // eslint-disable-line\n  config.entry.app.push('webpack-hot-middleware/client', 'webpack/hot/only-dev-server');\n  config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n  const bundler = webpack(config);\n  app.use(webpackDevMiddleware(bundler, { noInfo: true }));\n  app.use(webpackHotMiddleware(bundler, { log: console.log }));\n}\n\nlet db;\nMongoClient.connect('mongodb://localhost/issuetracker').then((connection) => {\n  db = connection;\n  app.listen(8000, () => {\n    console.log('App started on 8000');\n  });\n}).catch((error) => {\n  console.log('ERROR', error);\n});\n\n// Get Issues\napp.get('/api/issues', (req, res) => {\n  const filter = {};\n  if (req.query.status) {\n    filter.status = req.query.status;\n  }\n\n  if (req.query.effort_lte || req.query.effort_gte) {\n    filter.effort = {};\n  }\n\n  if (req.query.effort_lte) {\n    filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  }\n\n  if (req.query.effort_gte) {\n    filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n  }\n\n  if (req.query.search) filter.$text = { $search: req.query.search };\n\n  if(req.query._summary === undefined) {\n      let limit = req.query._limit ? parseInt(req.query._limit, 10) : 20;\n      const offset = req.query._offset ? parseInt(req.query._offset, 10) : 0;\n      if (limit > 50) limit = 50;\n\n      const cursor = db.collection('issues').find(filter).sort({ _id: 1 })\n          .skip(offset)\n          .limit(limit);\n          let totalCount;\n          cursor.count(false).then(result => {\n              totalCount = result;\n              return cursor.toArray();\n          })\n          .then((issues) => {\n              res.json({ metadata: { totalCount }, records: issues });\n      })\n          .catch((error) => {\n              console.log('ERROR', error);\n              res.status(500).json({ message: `Internal Server Error: ${error}` });\n          });\n  }\n  else {\n    db.collection('issues').aggregate([\n        { $match: filter },\n        { $group: { _id: { owner: '$owner', status: '$status' }, count: {\n        $sum: 1 } } },\n        ]).toArray()\n        .then(results => {\n            const stats = {};\n            results.forEach(result => {\n                if (!stats[result._id.owner]) stats[result._id.owner] = {};\n                stats[result._id.owner][result._id.status] = result.count;\n            });\n            res.json(stats);\n        })\n        .catch(error => {\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n  }\n\n});\n\n// Get Single Issue\napp.get('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    const ObjectId = require('mongodb').ObjectID;\n    issueId = ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n  db.collection('issues').find({ _id: issueId }).limit(1)\n    .next()\n    .then(issue => {\n      if (!issue) res.status(404).json({ message: `No issue found with ID: ${issueId}` });\n      else res.json(issue);\n    })\n    .catch(error => {\n      res.status(500).json({ message: `Internal Server Error: ${error}`});\n    });\n  });\n\n// Post Issue\napp.post('/api/issues', (req, res) => {\n  const newIssue = req.body;\n  newIssue.created = new Date();\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result =>\n    db.collection('issues').find({ _id: result.insertedId }).limit(1).next(),\n  ).then((newIssue) => {\n    res.json(newIssue);\n  })\n    .catch((error) => {\n      console.log('ERROR', error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n// Update Issue\napp.put('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    const ObjectId = require('mongodb').ObjectID;\n    issueId = ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n\n  const issue = req.body;\n  delete issue._id;\n\n  const err = Issue.validateIssue(issue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n  }\n  db.collection('issues').update({ _id: issueId },\n    Issue.convertIssue(issue)).then(() =>\n    db.collection('issues').find({ _id: issueId }).limit(1)\n      .next()\n  )\n    .then(savedIssue => {\n      res.json(savedIssue);\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\napp.delete('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    const ObjectId = require('mongodb').ObjectID;\n    issueId = ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n\n  db.collection('issues').deleteOne({ _id: issueId }).then((deleteRequest) => {\n    if (deleteRequest.result.n === 1) res.json({ status: 'OK' });\n    else res.json({ status: 'Warning: object not found' });\n  })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('public/index.html'));\n});\n"]}